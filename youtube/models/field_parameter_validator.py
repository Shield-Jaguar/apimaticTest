# -*- coding: utf-8 -*-

"""
youtube

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""
from youtube.api_helper import APIHelper


class FieldParameterValidator(object):

    """Implementation of the 'FieldParameterValidator' model.

    TODO: type model description here.

    Attributes:
        precision (float): TODO: type description here.
        string (list of string): TODO: type description here.
        unix_format_date_time (datetime): TODO: type description here.
        object (object): TODO: type description here.
        int_64 (long|int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "precision": 'Precision',
        "unix_format_date_time": 'UnixFormatDateTime',
        "object": 'Object',
        "int_64": 'Int64',
        "string": 'String'
    }

    def __init__(self,
                 precision=None,
                 unix_format_date_time=None,
                 object=None,
                 int_64=None,
                 string=None):
        """Constructor for the FieldParameterValidator class"""

        # Initialize members of the class
        self.precision = precision
        self.string = string
        self.unix_format_date_time = APIHelper.UnixDateTime(unix_format_date_time) if unix_format_date_time else None
        self.object = object
        self.int_64 = int_64

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        precision = dictionary.get('Precision')
        unix_format_date_time = APIHelper.UnixDateTime.from_value(dictionary.get("UnixFormatDateTime")).datetime if dictionary.get("UnixFormatDateTime") else None
        object = dictionary.get('Object')
        int_64 = dictionary.get('Int64')
        string = dictionary.get('String')

        # Return an object of this model
        return cls(precision,
                   unix_format_date_time,
                   object,
                   int_64,
                   string)
