/*
 * YoutubeLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package localhost5001.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import localhost5001.DateTimeHelper;

/**
 * This is a model class for FieldParameterValidator type.
 */
public class FieldParameterValidator {
    private double precision;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<String> string;
    private LocalDateTime unixFormatDateTime;
    private Object object;
    private long int64;

    /**
     * Default constructor.
     */
    public FieldParameterValidator() {
    }

    /**
     * Initialization constructor.
     * @param  precision  double value for precision.
     * @param  unixFormatDateTime  LocalDateTime value for unixFormatDateTime.
     * @param  object  Object value for object.
     * @param  int64  long value for int64.
     * @param  string  List of String value for string.
     */
    public FieldParameterValidator(
            double precision,
            LocalDateTime unixFormatDateTime,
            Object object,
            long int64,
            List<String> string) {
        this.precision = precision;
        this.string = string;
        this.unixFormatDateTime = unixFormatDateTime;
        this.object = object;
        this.int64 = int64;
    }

    /**
     * Getter for Precision.
     * @return Returns the double
     */
    @JsonGetter("Precision")
    public double getPrecision() {
        return precision;
    }

    /**
     * Setter for Precision.
     * @param precision Value for double
     */
    @JsonSetter("Precision")
    public void setPrecision(double precision) {
        this.precision = precision;
    }

    /**
     * Getter for MString.
     * @return Returns the List of String
     */
    @JsonGetter("String")
    public List<String> getMString() {
        return string;
    }

    /**
     * Setter for MString.
     * @param string Value for List of String
     */
    @JsonSetter("String")
    private void setMString(List<String> string) {
        this.string = string;
    }

    /**
     * Getter for UnixFormatDateTime.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("UnixFormatDateTime")
    @JsonSerialize(using = DateTimeHelper.UnixTimestampSerializer.class)
    public LocalDateTime getUnixFormatDateTime() {
        return unixFormatDateTime;
    }

    /**
     * Setter for UnixFormatDateTime.
     * @param unixFormatDateTime Value for LocalDateTime
     */
    @JsonSetter("UnixFormatDateTime")
    @JsonDeserialize(using = DateTimeHelper.UnixTimestampDeserializer.class)
    public void setUnixFormatDateTime(LocalDateTime unixFormatDateTime) {
        this.unixFormatDateTime = unixFormatDateTime;
    }

    /**
     * Getter for Object.
     * @return Returns the Object
     */
    @JsonGetter("Object")
    public Object getObject() {
        return object;
    }

    /**
     * Setter for Object.
     * @param object Value for Object
     */
    @JsonSetter("Object")
    public void setObject(Object object) {
        this.object = object;
    }

    /**
     * Getter for Int64.
     * @return Returns the long
     */
    @JsonGetter("Int64")
    public long getInt64() {
        return int64;
    }

    /**
     * Setter for Int64.
     * @param int64 Value for long
     */
    @JsonSetter("Int64")
    public void setInt64(long int64) {
        this.int64 = int64;
    }

    /**
     * Converts this FieldParameterValidator into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FieldParameterValidator [" + "precision=" + precision + ", unixFormatDateTime="
                + unixFormatDateTime + ", object=" + object + ", int64=" + int64 + ", string="
                + string + "]";
    }

    /**
     * Builds a new {@link FieldParameterValidator.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FieldParameterValidator.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(precision, unixFormatDateTime, object, int64)
                .string(getMString());
        return builder;
    }

    /**
     * Class to build instances of {@link FieldParameterValidator}.
     */
    public static class Builder {
        private double precision;
        private LocalDateTime unixFormatDateTime;
        private Object object;
        private long int64;
        private List<String> string;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  precision  double value for precision.
         * @param  unixFormatDateTime  LocalDateTime value for unixFormatDateTime.
         * @param  object  Object value for object.
         * @param  int64  long value for int64.
         */
        public Builder(double precision, LocalDateTime unixFormatDateTime, Object object,
                long int64) {
            this.precision = precision;
            this.unixFormatDateTime = unixFormatDateTime;
            this.object = object;
            this.int64 = int64;
        }

        /**
         * Setter for precision.
         * @param  precision  double value for precision.
         * @return Builder
         */
        public Builder precision(double precision) {
            this.precision = precision;
            return this;
        }

        /**
         * Setter for unixFormatDateTime.
         * @param  unixFormatDateTime  LocalDateTime value for unixFormatDateTime.
         * @return Builder
         */
        public Builder unixFormatDateTime(LocalDateTime unixFormatDateTime) {
            this.unixFormatDateTime = unixFormatDateTime;
            return this;
        }

        /**
         * Setter for object.
         * @param  object  Object value for object.
         * @return Builder
         */
        public Builder object(Object object) {
            this.object = object;
            return this;
        }

        /**
         * Setter for int64.
         * @param  int64  long value for int64.
         * @return Builder
         */
        public Builder int64(long int64) {
            this.int64 = int64;
            return this;
        }

        /**
         * Setter for string.
         * @param  string  List of String value for string.
         * @return Builder
         */
        public Builder string(List<String> string) {
            this.string = string;
            return this;
        }

        /**
         * Builds a new {@link FieldParameterValidator} object using the set fields.
         * @return {@link FieldParameterValidator}
         */
        public FieldParameterValidator build() {
            return new FieldParameterValidator(precision, unixFormatDateTime, object, int64,
                    string);
        }
    }
}
